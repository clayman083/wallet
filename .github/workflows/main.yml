name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - "master"
    tags:
      - "v*"
  pull_request:
    branches:
      - "master"

env:
  REGISTRY: ghcr.io
  APP_NAME: wallet
  IMAGE_NAME: ${{ github.repository }}

jobs:
  format:
    name: Check with Ruff formatter
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          architecture: "x64"

      - name: Set up uv
        # Install latest uv version using the installer
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Install requirements
        run: make install

      - name: Check with Ruff formatter
        run: make check_format

  mypy:
    name: Check with Mypy typechecker
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          architecture: "x64"

      - name: Set up uv
        # Install latest uv version using the installer
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Install requirements
        run: make install

      - name: Check with Mypy checker
        run: make check_mypy

  ruff:
    name: Check with Ruff linter
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          architecture: "x64"

      - name: Set up uv
        # Install latest uv version using the installer
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Install requirements
        run: make install

      - name: Check with Ruff linter
        run: make check_ruff

  pytest:
    name: Run tests
    needs: [format, mypy, ruff]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          architecture: "x64"

      - name: Set up uv
        # Install latest uv version using the installer
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Install requirements
        run: make install

      - name: Run tests
        run: make test

  build:
    name: Build Docker image
    needs: [pytest]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # branch event
            type=ref,event=branch
            # tag event
            type=ref,event=tag
            # master event
            type=sha,format=short,prefix=,suffix=,enable=${{ github.ref == format('refs/heads/{0}', 'master') }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        if: github.event_name != 'pull_request'
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
