[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "wallet"
version = "0.1.0"
description = "Personal budget planning tool"
authors = [{ name = "Kirill Sumorokov", email = "sumorokov.k@gmail.com" }]
readme = "README.md"
license = { text = "MIT" }

requires-python = ">=3.12"

dependencies = [
    "aiohttp>=3.9.5",
    "attrs>=23.2.0",
    "click>=8.1.7",
    "prometheus-client>=0.20.0",
    "structlog>=24.2.0",
    "ujson>=5.10.0",
    "uvloop>=0.19.0",
    "grpcio-reflection>=1.65.4",
    "protos",
]

[tool.uv]
dev-dependencies = [
    "grpc-stubs>=1.53.0.5",
    "mypy>=1.10.1",
    "ruff>=0.5.1",
    "types-ujson>=5.10.0.20240515",
    "coverage[toml]>=7.5.4",
    "pytest>=8.2.2",
    "pytest-aiohttp>=1.0.5",
    "pytest-cov>=5.0.0",
    "pytest-freezer>=0.4.8",
    "pytest-randomly>=3.15.0",
    "debugpy>=1.8.2",
    "ipdb>=0.13.13",
    "ipython>=8.26.0",
]

[tool.uv.sources]
protos = { git = "https://github.com/clayman083/protos", tag = "v0.1.0" }

# Coverage config
[tool.coverage.run]
branch = true
data_file = "tests/.coverage"
source = ["src/wallet"]
omit = ["*__main__*", "src/wallet/cli/__init__.py", "src/wallet/cli/server.py"]

[tool.coverage.paths]
source = ["src"]

[tool.coverage.report]
show_missing = true

[tool.coverage.html]
directory = "tests/coverage"

# Mypy config
[tool.mypy]
strict = true
python_version = "3.12"

warn_return_any = true
warn_unused_configs = true

# [[tool.mypy.overrides]]
# module = "punq.*"
# ignore_missing_imports = true

# Pytest settings
[tool.pytest.ini_options]
minversion = "8.0"
addopts = "--cov"
asyncio_mode = "auto"
markers = ["unit", "integration", "smoke"]
norecursedirs = ".tox"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
testpaths = ["tests"]

# Ruff config
[tool.ruff]
exclude = ['.venv']
line-length = 88
respect-gitignore = true
src = ["src", "tests"]
target-version = "py312"

[tool.ruff.lint]
ignore = [
    "D100",   # Missing docstring in public module
    "D104",   # Missing docstring in public package
    "D107",   # Missing docstring in __init__
    "PT004",
    "SIM108",
]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "D",   # pydocstyle
    "F",   # pyflakes
    "C90", # mccabe
    "C4",  # flake8-comprehensions
    # "B",    # flake8-bugbear
    "Q",   # flake8-quotes
    "T20", # flake8-print
    "PT",  # flake8-pytest-style
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "ERA", # eradicate
]
unfixable = ['T201']

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = true
mark-parentheses = true

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.lint.isort]
known-first-party = ["wallet", "tests"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

# Pyright config
[tool.pyright]
venvPath = "."
venv = ".venv"
